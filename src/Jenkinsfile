pipeline {
    agent any
    environment {
        registry = "ahmedjarraya/krayapipeline:latest" // Specify image name and tag
        dockerImage = ''
    }
    stages {
        stage('Git Checkout') {
            steps {
                script {
                    git branch: 'main',
                    credentialsId: 'your-credentials-id', // Optional, if you have credentials configured
                    url: 'https://github.com/AhmedJarraya999/5DS1-G6-KADDEM.git',
                    refspec: '+refs/heads/main:refs/remotes/origin/main' // Specify the refspec
                }
            }
        }
        stage('Build') {
            steps {
                sh "mvn clean install"
            }
        }

        stage('Sonar Quality') {
            steps {
                echo "sonar"
                // withSonarQubeEnv('SonarQube') {
                //     sh "mvn sonar:sonar"
                // }
                //yooo
            }
        }

        stage('MVN SONARQUBE') {
            steps {
                sh 'mvn sonar:sonar -Dsonar.login=admin -Dsonar.password=24149100'
             //webhook testsss
            }
        }

        stage('Deploy Artifacts') {
            steps {
                sh "mvn deploy"
            }
        }

        stage('Building Image') {
            steps {
                script {
                    // Specify the build context (current workspace)
                    dockerImage = docker.build(registry, ".")
                }
            }
        }
         stage("PUBLISH TO NEXUS") {
            steps {
               sh 'mvn clean deploy'
             //sh  'mvn clean deploy -Prelease'
            }
        }
        stage('Pushing Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-credentials') {
                        dockerImage.push()
                    }
                }
            }
        }
         stage("DOCKER-COMPOSE UP") {
            steps {
               script{
                   sh "docker-compose up -d"
               }
            }
        }
        stage("kube deploy") {
            steps {
               script{
                  echo("ssh to k8s node && kubectl apply -f")
               }
            }
        }
    }
}